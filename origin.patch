From 14f1fefcadd4ae2710c11dedca21eaf16a2339a4 Mon Sep 17 00:00:00 2001
From: PePr <petr.prazak@outlook.com>
Date: Fri, 22 Nov 2019 00:05:24 +0100
Subject: [PATCH] rename Mode to RoomMode, add modes for whole heating, set
 corrent enum serialiation

---
 Src/CentralSystem.Common/Contracts/House.cs   |  2 +-
 .../Contracts/HouseUpdate.cs                  |  2 +-
 Src/CentralSystem.Common/Contracts/Room.cs    |  2 +-
 .../Contracts/{Mode.cs => RoomMode.cs}        |  2 +-
 .../Contracts/RoomUpdate.cs                   |  2 +-
 .../Contracts/UnitUpdate.cs                   |  2 +-
 Src/CentralSystem/ConvertTo.cs                | 12 ++---
 Src/CentralSystem/Entities/OperationMode.cs   |  2 +-
 Src/CentralSystem/Services/StateUpdater.cs    |  2 +-
 Src/CentralSystem/Startup.cs                  |  4 +-
 .../appsettings.Development.json              |  2 +-
 Src/CommandProxy/Contracts/OperationalMode.cs |  5 +-
 .../Responses/Changes/OneSocketModeChange.cs  |  9 +++-
 .../Contracts/Responses/ResponseChangeMode.cs |  2 +-
 Src/CommandProxy/ConvertTo.cs                 | 47 +++++++++++++------
 Src/CommandProxy/Services/RequestProcessor.cs | 19 ++++----
 Src/CommandProxy/Startup.cs                   |  5 +-
 Src/CommandProxy/appsettings.Development.json |  4 +-
 Src/CommandProxy/appsettings.json             |  4 +-
 .../JsonSerializationUnitTests.cs             |  2 +-
 20 files changed, 80 insertions(+), 51 deletions(-)
 rename Src/CentralSystem.Common/Contracts/{Mode.cs => RoomMode.cs} (94%)

diff --git a/Src/CentralSystem.Common/Contracts/House.cs b/Src/CentralSystem.Common/Contracts/House.cs
index 545ac26..b4de96c 100644
--- a/Src/CentralSystem.Common/Contracts/House.cs
+++ b/Src/CentralSystem.Common/Contracts/House.cs
@@ -11,6 +11,6 @@ namespace PePr.Zbyny.Common.Contracts
     {
         [JsonProperty("M")]
         [JsonPropertyName("M")]
-        public Mode Mode { get; set; }
+        public RoomMode Mode { get; set; }
     }
 }
\ No newline at end of file
diff --git a/Src/CentralSystem.Common/Contracts/HouseUpdate.cs b/Src/CentralSystem.Common/Contracts/HouseUpdate.cs
index 6657077..6ee47b7 100644
--- a/Src/CentralSystem.Common/Contracts/HouseUpdate.cs
+++ b/Src/CentralSystem.Common/Contracts/HouseUpdate.cs
@@ -7,6 +7,6 @@ namespace PePr.Zbyny.Common.Contracts
     {
         [JsonProperty("M")]
         [JsonPropertyName("M")]
-        public Mode RequiredMode { get; set; }
+        public RoomMode RequiredMode { get; set; }
     }
 }
\ No newline at end of file
diff --git a/Src/CentralSystem.Common/Contracts/Room.cs b/Src/CentralSystem.Common/Contracts/Room.cs
index f7aca5c..d0402a3 100644
--- a/Src/CentralSystem.Common/Contracts/Room.cs
+++ b/Src/CentralSystem.Common/Contracts/Room.cs
@@ -26,6 +26,6 @@ namespace PePr.Zbyny.Common.Contracts
 
         [JsonProperty("M")]
         [JsonPropertyName("M")]
-        public Mode Mode { get; set; }
+        public RoomMode Mode { get; set; }
     }
 }
diff --git a/Src/CentralSystem.Common/Contracts/Mode.cs b/Src/CentralSystem.Common/Contracts/RoomMode.cs
similarity index 94%
rename from Src/CentralSystem.Common/Contracts/Mode.cs
rename to Src/CentralSystem.Common/Contracts/RoomMode.cs
index 358e437..cae5c2a 100644
--- a/Src/CentralSystem.Common/Contracts/Mode.cs
+++ b/Src/CentralSystem.Common/Contracts/RoomMode.cs
@@ -5,7 +5,7 @@ using System.Text;
 
 namespace PePr.Zbyny.Common.Contracts
 {
-    public enum Mode
+    public enum RoomMode
     {
         [EnumMember(Value = "0")]
         Unknown = 0,
diff --git a/Src/CentralSystem.Common/Contracts/RoomUpdate.cs b/Src/CentralSystem.Common/Contracts/RoomUpdate.cs
index 80fbf9c..a88a1e8 100644
--- a/Src/CentralSystem.Common/Contracts/RoomUpdate.cs
+++ b/Src/CentralSystem.Common/Contracts/RoomUpdate.cs
@@ -14,7 +14,7 @@ namespace PePr.Zbyny.Common.Contracts
 
         [JsonProperty("M", NullValueHandling = NullValueHandling.Ignore)]
         [JsonPropertyName("M")]
-        public Mode? RequiredMode { get; set; }
+        public RoomMode? RequiredMode { get; set; }
 
         [JsonProperty("T", NullValueHandling = NullValueHandling.Ignore)]
         [JsonPropertyName("T")]
diff --git a/Src/CentralSystem.Common/Contracts/UnitUpdate.cs b/Src/CentralSystem.Common/Contracts/UnitUpdate.cs
index 593c53f..14c1651 100644
--- a/Src/CentralSystem.Common/Contracts/UnitUpdate.cs
+++ b/Src/CentralSystem.Common/Contracts/UnitUpdate.cs
@@ -10,7 +10,7 @@ namespace PePr.Zbyny.Common.Contracts
     {
         [JsonProperty("M", NullValueHandling = NullValueHandling.Ignore)]
         [JsonPropertyName("M")]
-        public Mode? RequiredHouseMode { get; set; }
+        public RoomMode? RequiredHouseMode { get; set; }
 
         [JsonProperty("R", NullValueHandling = NullValueHandling.Ignore)]
         [JsonPropertyName("R")]
diff --git a/Src/CentralSystem/ConvertTo.cs b/Src/CentralSystem/ConvertTo.cs
index cd40a77..5b96222 100644
--- a/Src/CentralSystem/ConvertTo.cs
+++ b/Src/CentralSystem/ConvertTo.cs
@@ -9,9 +9,9 @@ namespace PePr.Zbyny.CentralSystem
 {
     public static class ConvertTo
     {
-        static public PePr.Zbyny.Common.Contracts.Mode ModeContract(Entities.OperationMode mode)
+        static public PePr.Zbyny.Common.Contracts.RoomMode ModeContract(Entities.OperationMode mode)
         {
-            return (PePr.Zbyny.Common.Contracts.Mode)mode;
+            return (PePr.Zbyny.Common.Contracts.RoomMode)mode;
         }
 
         static public PePr.Zbyny.Common.Contracts.SocketMode ModeContract(Entities.SocketOperationalMode mode)
@@ -19,14 +19,14 @@ namespace PePr.Zbyny.CentralSystem
             return (PePr.Zbyny.Common.Contracts.SocketMode)mode;
         }
 
-        static public PePr.Zbyny.Common.Contracts.Mode? ModeContract(Entities.OperationMode? mode)
+        static public PePr.Zbyny.Common.Contracts.RoomMode? ModeContract(Entities.OperationMode? mode)
         {
             return mode == null || mode.Value == Entities.OperationMode.Empty ?
-                (PePr.Zbyny.Common.Contracts.Mode?)null :
-                (PePr.Zbyny.Common.Contracts.Mode)mode.Value;
+                (PePr.Zbyny.Common.Contracts.RoomMode?)null :
+                (PePr.Zbyny.Common.Contracts.RoomMode)mode.Value;
         }
 
-        static public PePr.Zbyny.CentralSystem.Entities.OperationMode OperationModeEntity(PePr.Zbyny.Common.Contracts.Mode mode)
+        static public PePr.Zbyny.CentralSystem.Entities.OperationMode OperationModeEntity(PePr.Zbyny.Common.Contracts.RoomMode mode)
         {
             return (PePr.Zbyny.CentralSystem.Entities.OperationMode)mode;
         }
diff --git a/Src/CentralSystem/Entities/OperationMode.cs b/Src/CentralSystem/Entities/OperationMode.cs
index 874f702..f931cb7 100644
--- a/Src/CentralSystem/Entities/OperationMode.cs
+++ b/Src/CentralSystem/Entities/OperationMode.cs
@@ -14,7 +14,7 @@ namespace PePr.Zbyny.Common.Contracts
 {
     static class OperationModeExtensions
     {
-        static public PePr.Zbyny.CentralSystem.Entities.OperationMode ToEntity(this PePr.Zbyny.Common.Contracts.Mode mode)
+        static public PePr.Zbyny.CentralSystem.Entities.OperationMode ToEntity(this PePr.Zbyny.Common.Contracts.RoomMode mode)
         {
             return (PePr.Zbyny.CentralSystem.Entities.OperationMode)mode;
         }
diff --git a/Src/CentralSystem/Services/StateUpdater.cs b/Src/CentralSystem/Services/StateUpdater.cs
index 370cd5b..b978ef1 100644
--- a/Src/CentralSystem/Services/StateUpdater.cs
+++ b/Src/CentralSystem/Services/StateUpdater.cs
@@ -50,7 +50,7 @@ namespace PePr.Zbyny.CentralSystem.Services
                 {
                     Id = r.Key,
                     RequiredTemperature = r.Required.TemperatureManual,
-                    RequiredMode = r.Required.Mode != null ? (Mode?)ConvertTo.ModeContract(r.Required.Mode.Value) : null
+                    RequiredMode = r.Required.Mode != null ? (RoomMode?)ConvertTo.ModeContract(r.Required.Mode.Value) : null
                 });
 
             var updatedSockets = _repository.GetSockets()
diff --git a/Src/CentralSystem/Startup.cs b/Src/CentralSystem/Startup.cs
index b8a2ceb..71a2a37 100644
--- a/Src/CentralSystem/Startup.cs
+++ b/Src/CentralSystem/Startup.cs
@@ -32,8 +32,8 @@ namespace PePr.Zbyny.CentralSystem
 
             services.AddTransient<IAdminProvider, AdminProvider>();
 
-            //services.AddTransient<IDataRepository, DbDataRepository>();
-            services.AddTransient<IDataRepository, InMemoryDataRepository>();
+            services.AddTransient<IDataRepository, DbDataRepository>();
+            //services.AddTransient<IDataRepository, InMemoryDataRepository>();
             services.AddTransient<IProxyStateUpdater, StateUpdater>();
             services.AddTransient<IWebStateUpdater, StateUpdater>();
             services.AddTransient<IStateProvider, StateProvider>();
diff --git a/Src/CentralSystem/appsettings.Development.json b/Src/CentralSystem/appsettings.Development.json
index 459582d..c11f42a 100644
--- a/Src/CentralSystem/appsettings.Development.json
+++ b/Src/CentralSystem/appsettings.Development.json
@@ -7,6 +7,6 @@
     }
   },
   "Repository": {
-    "ConnectionString": "c:\\mytemp\\data.db"
+    "ConnectionString": "data.db"
   }
 }
diff --git a/Src/CommandProxy/Contracts/OperationalMode.cs b/Src/CommandProxy/Contracts/OperationalMode.cs
index 059c5e7..d2b51c7 100644
--- a/Src/CommandProxy/Contracts/OperationalMode.cs
+++ b/Src/CommandProxy/Contracts/OperationalMode.cs
@@ -23,7 +23,10 @@ namespace PePr.Zbyny.ProxySystem.Contracts
         [EnumMember(Value = "8")]
         Program = 4,
 
+        [EnumMember(Value = "13")]
+        ProgramAll,
+
         [EnumMember(Value = "12")]
-        On = 5,
+        On
     }
 }
diff --git a/Src/CommandProxy/Contracts/Responses/Changes/OneSocketModeChange.cs b/Src/CommandProxy/Contracts/Responses/Changes/OneSocketModeChange.cs
index c6b23d0..d49bd2e 100644
--- a/Src/CommandProxy/Contracts/Responses/Changes/OneSocketModeChange.cs
+++ b/Src/CommandProxy/Contracts/Responses/Changes/OneSocketModeChange.cs
@@ -11,10 +11,15 @@ namespace PePr.Zbyny.ProxySystem.Contracts.Responses.Changes
         [JsonProperty("2", Order = 1)]
         public string DeviceId { get; set; }
 
-        [JsonProperty("22", Order = 2)]
-        public OperationalMode gv_mode { get; set; }
+        [JsonProperty("19", Order = 2)]
+        public string on_off { get; set; }
 
         [JsonProperty("15", Order = 3)]
         public OperationalMode nv_mode { get; set; }
+
+        [JsonProperty("22", Order = 4)]
+        public OperationalMode gv_mode { get; set; }
+
+        
     }
 }
diff --git a/Src/CommandProxy/Contracts/Responses/ResponseChangeMode.cs b/Src/CommandProxy/Contracts/Responses/ResponseChangeMode.cs
index 3ed3864..f4ecdbf 100644
--- a/Src/CommandProxy/Contracts/Responses/ResponseChangeMode.cs
+++ b/Src/CommandProxy/Contracts/Responses/ResponseChangeMode.cs
@@ -10,7 +10,7 @@ namespace PePr.Zbyny.ProxySystem.Contracts.Responses
     public class ResponseChangeMode<TChange> : ResponseDataBase where TChange : IChange
     {
         [JsonProperty("2")]
-        public string NoIdea { get; set; }
+        public string Context { get; set; }
 
         [JsonProperty("3")]
         public TChange Query { get; set; }
diff --git a/Src/CommandProxy/ConvertTo.cs b/Src/CommandProxy/ConvertTo.cs
index 13a066e..8145dce 100644
--- a/Src/CommandProxy/ConvertTo.cs
+++ b/Src/CommandProxy/ConvertTo.cs
@@ -28,7 +28,7 @@ namespace PePr.Zbyny.ProxySystem
             throw new NotImplementedException();
         }
 
-        public static PePr.Zbyny.ProxySystem.Contracts.OperationalMode Response(Entities.RoomMode value)
+        public static PePr.Zbyny.ProxySystem.Contracts.OperationalMode RoomResponse(Entities.RoomMode value)
         {
             switch (value)
             {
@@ -45,7 +45,24 @@ namespace PePr.Zbyny.ProxySystem
             }
         }
 
-        public static PePr.Zbyny.ProxySystem.Contracts.OperationalMode Response(Entities.SocketMode value)
+        public static PePr.Zbyny.ProxySystem.Contracts.OperationalMode AllRoomResponse(Entities.RoomMode value)
+        {
+            switch (value)
+            {
+                case Entities.RoomMode.AntiFreezing:
+                    return PePr.Zbyny.ProxySystem.Contracts.OperationalMode.AntiFreezing;
+                case Entities.RoomMode.Manual:
+                    return PePr.Zbyny.ProxySystem.Contracts.OperationalMode.Manual;
+                case Entities.RoomMode.Off:
+                    return PePr.Zbyny.ProxySystem.Contracts.OperationalMode.Off;
+                case Entities.RoomMode.Program:
+                    return PePr.Zbyny.ProxySystem.Contracts.OperationalMode.ProgramAll;
+                default:
+                    return PePr.Zbyny.ProxySystem.Contracts.OperationalMode.Unknown;
+            }
+        }
+
+        public static PePr.Zbyny.ProxySystem.Contracts.OperationalMode SocketResponse(Entities.SocketMode value)
         {
             switch (value)
             {
@@ -62,27 +79,27 @@ namespace PePr.Zbyny.ProxySystem
 
         #region Central System <==> Proxy
 
-        public static PePr.Zbyny.ProxySystem.Entities.RoomMode? UnitModeEntity(PePr.Zbyny.Common.Contracts.Mode? value)
+        public static PePr.Zbyny.ProxySystem.Entities.RoomMode? UnitModeEntity(PePr.Zbyny.Common.Contracts.RoomMode? value)
         {
             return value == null ? null : (PePr.Zbyny.ProxySystem.Entities.RoomMode?)RoomEntity(value.Value);
         }
 
-        public static PePr.Zbyny.ProxySystem.Entities.RoomMode? RoomEntity(PePr.Zbyny.Common.Contracts.Mode? value)
+        public static PePr.Zbyny.ProxySystem.Entities.RoomMode? RoomEntity(PePr.Zbyny.Common.Contracts.RoomMode? value)
         {
             return value != null ? ConvertTo.RoomEntity(value.Value) : (PePr.Zbyny.ProxySystem.Entities.RoomMode?)null;
         }
 
-        public static PePr.Zbyny.ProxySystem.Entities.RoomMode RoomEntity(PePr.Zbyny.Common.Contracts.Mode value)
+        public static PePr.Zbyny.ProxySystem.Entities.RoomMode RoomEntity(PePr.Zbyny.Common.Contracts.RoomMode value)
         {
             switch (value)
             {
-                case PePr.Zbyny.Common.Contracts.Mode.AntiFreezing:
+                case PePr.Zbyny.Common.Contracts.RoomMode.AntiFreezing:
                     return PePr.Zbyny.ProxySystem.Entities.RoomMode.AntiFreezing;
-                case PePr.Zbyny.Common.Contracts.Mode.Manual:
+                case PePr.Zbyny.Common.Contracts.RoomMode.Manual:
                     return PePr.Zbyny.ProxySystem.Entities.RoomMode.Manual;
-                case PePr.Zbyny.Common.Contracts.Mode.Offline:
+                case PePr.Zbyny.Common.Contracts.RoomMode.Offline:
                     return PePr.Zbyny.ProxySystem.Entities.RoomMode.Off;
-                case PePr.Zbyny.Common.Contracts.Mode.Program:
+                case PePr.Zbyny.Common.Contracts.RoomMode.Program:
                     return PePr.Zbyny.ProxySystem.Entities.RoomMode.Program;
                 default:
                     return PePr.Zbyny.ProxySystem.Entities.RoomMode.Unknown;
@@ -91,20 +108,20 @@ namespace PePr.Zbyny.ProxySystem
 
         
 
-        public static PePr.Zbyny.Common.Contracts.Mode RoomContract(PePr.Zbyny.ProxySystem.Entities.RoomMode value)
+        public static PePr.Zbyny.Common.Contracts.RoomMode RoomContract(PePr.Zbyny.ProxySystem.Entities.RoomMode value)
         {
             switch (value)
             {
                 case PePr.Zbyny.ProxySystem.Entities.RoomMode.AntiFreezing:
-                    return PePr.Zbyny.Common.Contracts.Mode.AntiFreezing;
+                    return PePr.Zbyny.Common.Contracts.RoomMode.AntiFreezing;
                 case PePr.Zbyny.ProxySystem.Entities.RoomMode.Manual:
-                    return PePr.Zbyny.Common.Contracts.Mode.Manual;
+                    return PePr.Zbyny.Common.Contracts.RoomMode.Manual;
                 case PePr.Zbyny.ProxySystem.Entities.RoomMode.Off:
-                    return PePr.Zbyny.Common.Contracts.Mode.Offline;
+                    return PePr.Zbyny.Common.Contracts.RoomMode.Offline;
                 case PePr.Zbyny.ProxySystem.Entities.RoomMode.Program:
-                    return PePr.Zbyny.Common.Contracts.Mode.Program;
+                    return PePr.Zbyny.Common.Contracts.RoomMode.Program;
                 default:
-                    return PePr.Zbyny.Common.Contracts.Mode.Unknown;
+                    return PePr.Zbyny.Common.Contracts.RoomMode.Unknown;
             }
         }
 
diff --git a/Src/CommandProxy/Services/RequestProcessor.cs b/Src/CommandProxy/Services/RequestProcessor.cs
index 796f892..67e7e2c 100644
--- a/Src/CommandProxy/Services/RequestProcessor.cs
+++ b/Src/CommandProxy/Services/RequestProcessor.cs
@@ -102,8 +102,8 @@ namespace PePr.Zbyny.ProxySystem.Services
                     {
                         DeviceId = room.DeviceId,
                         TemperatureManual = room.RequiredTemperature.Value.ToString(),
-                        gv_mode = ConvertTo.Response(room.RequiredMode ?? RoomMode.Manual),
-                        nv_mode = ConvertTo.Response(room.RequiredMode ?? RoomMode.Manual)
+                        gv_mode = ConvertTo.RoomResponse(room.RequiredMode ?? RoomMode.Manual),
+                        nv_mode = ConvertTo.RoomResponse(room.RequiredMode ?? RoomMode.Manual)
                     };
                 }
                 else if (room.RequiredMode.HasValue)
@@ -111,8 +111,8 @@ namespace PePr.Zbyny.ProxySystem.Services
                     change = new OneRoomModeChange
                     {
                         DeviceId = room.DeviceId,
-                        gv_mode = ConvertTo.Response(room.RequiredMode.Value),
-                        nv_mode = ConvertTo.Response(room.RequiredMode.Value)
+                        gv_mode = ConvertTo.RoomResponse(room.RequiredMode.Value),
+                        nv_mode = ConvertTo.RoomResponse(room.RequiredMode.Value)
                     };
                 }
             }
@@ -123,8 +123,9 @@ namespace PePr.Zbyny.ProxySystem.Services
                 change = new OneSocketModeChange
                 {
                     DeviceId = room.DeviceId,
-                    gv_mode = ConvertTo.Response(socket.RequiredMode),
-                    nv_mode = ConvertTo.Response(socket.RequiredMode)
+                    on_off = socket.RequiredMode == SocketMode.On ? "1" : "0",
+                    gv_mode = ConvertTo.SocketResponse(socket.RequiredMode),
+                    nv_mode = ConvertTo.SocketResponse(socket.RequiredMode)
                 };
             }
             //nakonec to pripadne prepiseme natavenim pro cely dum (predpoklad je, ze cely dum ma vetsi priority) 
@@ -135,8 +136,8 @@ namespace PePr.Zbyny.ProxySystem.Services
                 change = new AllRoomsModeChange
                 {
                     DeviceId = "all",
-                    gv_mode = ConvertTo.Response(modeToUpdate.Value),
-                    nv_mode = ConvertTo.Response(modeToUpdate.Value),
+                    gv_mode = ConvertTo.AllRoomResponse(modeToUpdate.Value),
+                    nv_mode = ConvertTo.AllRoomResponse(modeToUpdate.Value),
                     Code = DeviceType.Heating
                 };
             }
@@ -148,7 +149,7 @@ namespace PePr.Zbyny.ProxySystem.Services
                     Code = "1",
                     Data = new ResponseChangeMode<IChange>()
                     {
-                        NoIdea = "1",
+                        Context = "1",
                         Query = change
                     }
                 };
diff --git a/Src/CommandProxy/Startup.cs b/Src/CommandProxy/Startup.cs
index 4088c27..6a80e21 100644
--- a/Src/CommandProxy/Startup.cs
+++ b/Src/CommandProxy/Startup.cs
@@ -35,7 +35,10 @@ namespace PePr.Zbyny.ProxySystem
 
             services
                 .AddControllers(o => { o.UseGeneralRoutePrefix("api/v0.1/machine"); })
-                .AddNewtonsoftJson();
+                .AddNewtonsoftJson( o => o.SerializerSettings.Converters = new List<Newtonsoft.Json.JsonConverter>
+                                                    {
+                                                        new Newtonsoft.Json.Converters.StringEnumConverter()
+                                                    });
 
             services.AddHostedService<QueuedHostedService>();
             services.AddHostedService<TimedHostedService>();
diff --git a/Src/CommandProxy/appsettings.Development.json b/Src/CommandProxy/appsettings.Development.json
index 2d91439..b07800f 100644
--- a/Src/CommandProxy/appsettings.Development.json
+++ b/Src/CommandProxy/appsettings.Development.json
@@ -8,13 +8,13 @@
   },
 
   "CentralSystem": {
-    "BaseAddress": "http://localhost:54492/api/",
+    "BaseAddress": "http://peprremoteheating.azurewebsites.net/api/",
     "FullUpdateRoute": "proxy/full",
     "HouseRoute": "proxy/house",
     "RoomRoute": "proxy/room"
   },
 
   "Timers": {
-    "FullUpdateInterval" :  10
+    "FullUpdateInterval" :  1
   }
 }
diff --git a/Src/CommandProxy/appsettings.json b/Src/CommandProxy/appsettings.json
index b965c66..e13afa0 100644
--- a/Src/CommandProxy/appsettings.json
+++ b/Src/CommandProxy/appsettings.json
@@ -10,13 +10,13 @@
   "AllowedHosts": "*",
 
   "CentralSystem": {
-    "BaseAddress": "http://localhost:54492/api/",
+    "BaseAddress": "http://peprremoteheating.azurewebsites.net/api/",
     "FullUpdateRoute": "proxy/full",
     "HouseRoute": "proxy/house",
     "RoomRoute": "proxy/room"
   },
 
   "Timers": {
-    "FullUpdateInterval": 10
+    "FullUpdateInterval": 1
   }
 }
diff --git a/Src/PePr.Zbyny.ProxySystem.UnitTests/JsonSerializationUnitTests.cs b/Src/PePr.Zbyny.ProxySystem.UnitTests/JsonSerializationUnitTests.cs
index 47c322c..159a36d 100644
--- a/Src/PePr.Zbyny.ProxySystem.UnitTests/JsonSerializationUnitTests.cs
+++ b/Src/PePr.Zbyny.ProxySystem.UnitTests/JsonSerializationUnitTests.cs
@@ -13,7 +13,7 @@ namespace PePr.Zbyny.ProxySystem.UnitTests
             var input = new ResponseBase<ResponseChangeMode>
             {
                 Code = "1",
-                Data = new ResponseChangeMode
+                Data = new ResponseChangeMode<>
                 {
                     NoIdea = "1",
                     Query = new Contracts.QueryPushItem
-- 
2.17.1.windows.2

